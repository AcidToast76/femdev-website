doctype html
html(lang='en')
  head
    include ../defaults/header.pug
  body.bg-neutral-200
    include ../defaults/nav.pug
    content.flex.flex-col.items-center.justify-center
      main
        //- Add a button so that it can be submitted to create a passkey
        //- Create a div with an id of "success"
        //- Create a div with an id of "error"
        button(type='submit' id='btnBegin') Login
        div
          h2#success
        div
          h2#error
    include ../defaults/footer.pug
    script.
      const { startAuthentication } = SimpleWebAuthnBrowser;
      const elemBegin = document.getElementById('btnBegin');
      const elemSuccess = document.getElementById('success');
      const elemError = document.getElementById('error');
      elemBegin.addEventListener('click', async () => {
        elemSuccess.innerHTML = '';
        elemError.innerHTML = '';

        //- GET authentication options from the endpoint that calls
        //- @simplewebauthn/server -> generateAuthenticationOptions()
        const resp = await fetch('/auth/login/get-creds');

        let asseResp;
        try {
          asseResp = await startAuthentication(await resp.json());
        } catch (error) {
          elemError.innerText = error;
          throw error;
        }

        //- POST the response to the endpoint that calls
        //- @simplewebauthn/server -> verifyAuthenticationResponse()
        const verificationResp = await fetch('/auth/login/verify', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(asseResp),
        });
        const verificationJSON = await verificationResp.json();
        if (verificationJSON && verificationJSON.verified) elemSuccess.innerHTML = 'Success!';
        else elemError.innerHTML = `Oh no, something went wrong! Response: <pre>${JSON.stringify(verificationJSON)}</pre>`;
      });