module.exports = new Map()
    .set(0, { httpCode: 500, code: 0, message: 'Unknown error' })
    .set(1, { httpCode: 401, code: 1, message: 'No API key provided' })
    .set(2, { httpCode: 401, code: 2, message: 'Invalid API key provided' })
    .set(3, { httpCode: 403, code: 3, message: 'The provided API key has been disabled' })
    .set(4, { httpCode: 400, code: 4, message: 'Missing Query Paramater(s)' })
    .set(5, { httpCode: 400, code: 5, message: 'Invalid Query Paramater(s)' })
    .set(6, { httpCode: 400, code: 6, message: 'Missing Header Paramater(s)' })
    .set(7, { httpCode: 400, code: 7, message: 'Invalid Header Paramater(s)' })
    .set(8, { httpCode: 400, code: 8, message: 'Missing Body Paramater(s)' })
    .set(9, { httpCode: 400, code: 9, message: 'Invalid Body Paramater(s)' })
    .set(10, { httpCode: 400, code: 10, message: 'Unable to encrypt data' })
    .set(11, { httpCode: 400, code: 11, message: 'Unable to decrypt data' })
    .set(12, { httpCode: 403, code: 12, message: 'You are not authorized to access this resource' })
    .set(13, { httpCode: 404, code: 13, message: 'Unable to find requested resource' })
    .set(14, { httpCode: 500, code: 14, message: 'Unable to delete requested user' })
    .set(15, { httpCode: 500, code: 15, message: 'Unable to delete requested token' })
    .set(16, { httpCode: 403, code: 16, message: 'The request was denied due to being blacklisted' })
    .set(17, { httpCode: 423, code: 17, message: 'This endpoint is currently disabled' })
    .set(18, { httpCode: 403, code: 18, message: 'The license associated with the provided API key has expired' })
    .set(19, { httpCode: 403, code: 19, message: 'The license associated with the provided API key has been disabled' })
    .set(20, { httpCode: 403, code: 20, message: 'The license associated with the provided API key has been revoked' })
    .set(21, { httpCode: 501, code: 21, message: 'This endpoint has not been implemented yet' })
    .set(22, { httpCode: 500, code: 22, message: 'Unable to create requested user' })
    .set(23, { httpCode: 500, code: 23, message: 'Unable to update requested user' })
    .set(24, { httpCode: 500, code: 24, message: 'Unable to create requested token' })
    .set(25, { httpCode: 500, code: 25, message: 'Unable to update requested token' })