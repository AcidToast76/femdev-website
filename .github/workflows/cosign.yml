name: CoSign

on:
  workflow_dispatch:

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  example:
    runs-on: ubuntu-latest
    name: CoSign Runner
    steps:
    - name: Install Cosign
      uses: sigstore/cosign-installer@v3.3.0
    - name: Check install!
      run: cosign version
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Confirm Git Commit message for SemVer
      run: |-
        echo "Commit message: ${{ github.event.head_commit.message }}"
        if [[ ${{ github.event.head_commit.message }} =~ v[0-9]+\.[0-9]+\.[0-9]+ ]]; then
          echo "Commit message contains a SemVer value"
        else
          echo "Commit message does not contain a SemVer value"
          exit 0
        fi
    # check if the commit has a semver value in the commit message
    # if so, generate a zip archive of the code, sign the file,
    # and create a release in the repository with the signed file
    # and the release notes to be entered from a CHANGELOG.md file
    - name: Prepare Release
      run: |
        echo "Creating release"
        # get the version from the commit message
        version=$(echo ${{ github.event.head_commit.message }} | grep -o 'v[0-9]\+\.[0-9]\+\.[0-9]\+')
        echo "Version: $version"
        # filename
        fn = $version.zip
        # create a zip archive of the code
        zip -r $fn .
        # sign the zip archive
        cosign sign -key cosign.key $fn
        releaseBody=$(awk '/## /{f=1} f{print; if (/## /) exit}' CHANGELOG.md)
        echo "Release Body: $releaseBody"
        echo "::set-output name=version::$version"
        echo "::set-output name=fn::$fn"
        echo "::set-output name=releaseBody::$releaseBody"
    - name: Create Release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ version }}
        release_name: ${{ version }}
        body: ${{ releaseBody }}
        draft: false
        prerelease: false
        files: ${{ fn }}